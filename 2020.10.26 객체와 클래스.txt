
2020.10.26

[복습]

○ 클래스의 구성요소 ○
 a. 생성자
 b. 멤버변수
 c. (멤버) 메서드

# 클래스 변수명 = new 생성자(=클래스명) ( )

 A. 생성자의 역할
 - 멤버변수의 초기화
 - 객체(=참조자료형의 변수) 생성 때, 자료형에 맞는 값으로 사용됨.

 B-1. 멤버변수의 역할
 - 객체의 구성 요소를 표현.

 B-2. 지역변수의 역할
 - 메서드 안에서 중복되는 값을 표현.
 
 C. 메서드의 역할
 - 객체의 기능, 능력을 표현.
 - 메서드 : 객체의 기능을 표현.
 - 클래스 안에서 중복되는 값들을 표현.

 # 디폴트 생성자는 다른 생성자가 눈에 안 보이면 존재 한다.
                        다른 생성자가 눈에 보이는데, 디폴트 생성자가 안보이면 존재x

 @ this 의 의미 => 객체 자기 자신
 - this를 붙이는 이유 => 지역변수와 멤버변수가 이름이 같으면 컴파일러는
                                지역변수로 인식한다. 만약, 멤버변수를 가리키고 싶다면
                                this.멤버변수로 접근.
 - this ( ) => 생성자 호출, 해당 클래스 안에서만 사용 가능.
                  다른 생성자의 첫번째 라인에서만 호출 (번거로워서 메서드 선호)

# 대입은 생성자나 메서드 스코프 안에서만.
   (필드에서 변수대입, 메서드호출 불가)

# 메서드 안에서 또 다른 메서드 생성은 불가, 메서드 호출만 가능

# 멤버변수나 메서드를 호출(=사용)하려면,
   반드시 객체(=해당 변수나 메서드를 포함하고 있는 참조자료형의 변수)가 필요.

========================================================

<객체와 클래스>

-객체-
a. 객체(=*object*, *instance*, bean, entity, domain) 는 국어사전의 명사
  - 한라산 [ Mountain hanlasan = new Mountain("한라산"); ]
  - 자동차 [ Car bmw = new Car( ); ]
 
b. heap 메모리에 저장된 데이터

c. 실체

# 객체 생성법 => 참조자료형 변수명(=객체명, 레퍼런스) = new 생성자( );
# 객체가 갖고 있는 자원(변수, 메서드)을 사용하는 방법
=> 객체명.변수명; / 객체명.메서드명( );

-클래스-
a. 객체의 구성 요소를 표현한 자료

b. 객체 생성법을 표현한 자료

c. 객체의 기능을 표현한 자료

d. 설계도 [붕어빵 틀 : 붕어빵 = 클래스 : 객체]
            [자동차설계도 : 자동차 = 클래스 : 객체]

e. 클래스의 구성 요소 => 멤버 변수, 생성자, 메서드

f. 클래스는 절대로 단독 실행 x => 객체 생성 

g. class 키워드가 있어야 클래스.
 
