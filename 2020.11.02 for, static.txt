
2020.11.02

(for 문)

int = 1 [초기식] i<=10 [조건식] i++ [증감식]

(while 문)

      int i = 1; [for문의 초기식 역할] 
      while(i <= 10) { [for문의 조건식 역할]
	   sysout(i);
	   i++; [for문의 증감식 역할]


break는 반복 중인 제어문을 빠져나갈 수 있도록 해주는 키워드
continue는 반복 중인 코드 블록을 스킵 하여 다음 반복으로 넘김.

------------------------------------------------------------------------------------------

< static >
변수, 상수, 메서드(= class 변수, 상수, 메서드)
-> 주로 보안을 강화할 때 사용 함.

프로그램이 실행되면, 곧 바로 static 영역에 로딩이 되어, 실행 가능한 상태가 된다.
[인스턴스나 일반 메서드는 객체가 먼저 만들어져서 실행 가능한 상태가 됨]

a. static 변수/ 상수 : 클래스 이름만으로 호출이 가능
                         객체 생성 개수와 상관 없이 *무조건 1개만* 생성 가능.
- 인스턴스 변수 : new 연산자로 생성해서 함수를 호출 해야 하며,
                     객체를 생성할 때 마다 만들어 짐.

- 만드는 법 :
public static type(자료형) 변수명;
public static int a;

- 호출 하는 법 :
class명.변수명/ 상수명/ 메서드명

b. public class Test {
	
	public int a;
	public static int b;
	
	
	public void me2() {
		System.out.println(a);
		System.out.println(Test.b);
	}
	public static void me1() {
		Test t1 = new Test();
		System.out.println(t1.a);
		System.out.println(Test.b);



