
2020.10.21

[복습]

@ 반환형 - 반환되는 데이터의 자료 값.

@ 메서드 객체의 기능(=능력) 예] 속도를 높인다

@ 변수는 객체의 구성요소 예) 자동차의 핸들, 차주의 스티커

@ 생성자(consructors) : 객체가 생성될 때 초기화를 담당하는 메서드 
 - 역할 : 1. 객체선언 할 때 2. 객체의 멤버변수 초기화 시킬 때

@ 초기화
 - 변수를 선언하면서 값을 동시에 입력하는 것
참조자료형 - (자료형 변수명 = new 자료형에 맞는 값;)
예) MethodTest mt2 = new MethodTest();

@Person p1 = new Person();
 좌항 : p1의 자료형은 person클래스
 우항 : new연산자를 통해서 person클래스에 p1 변수의 객체 자리를 마련하는 작업.
 생성자 : person() -> p1 이라는 래퍼런스변수를 person 클래스의 자리에
                            객체를 생성해주는 것.

 결론 => ( )이 들어가면 java에서는 메서드라 불리며,
              person();은 생성자이면서 person 이라는 이름을 가진 메서드.

 public person(){} -> 기본 생성자
                          왜냐하면 class를 선언해두고 아무것도 만들어 놓지 않는다면,
                           person class는 자동으로 기본 생성자를 만들어냄.

@ 필드(field) : 속성, 상태, 특성
-> a. 명사형
    b. 멤버변수
    c. 값의 상태를 관리
    d. 데이터를 저장하는 공간
    e. int size = 6;

@ 메서드(method) : 동작, 행동, 기능
->  a. 동사형
     b. 특정기능을 정의한 블록
     c. 메서드가 호출되면 자신이 가지고 있는 기능을 수행
     d. 기능 수행이 끝나면 리턴값 존재

@ 생성자(constructor)
->  a. 객체를 만들 때 따라야 하는 규칙정의
     b. 객체 생성을 도와주는 블록
     c. 생성자 이름은 클래스 이름과 동일

@ 생성자와 메서드의 다른 점
->  a. 생성자의 이름은 클래스의 이름과 동일해야한다.
     b. 생성자는 값을 리턴하지 않고, 반환형 또한 표시하지 않는다.
   [void 유무 (메서드가 void 보유)] *void = 반환형 (반환되는 데이터의 자료값 없을 때)

@ 변수 선언 공식 : 변수명 = 자료형에 맞는 값; 예) a = 10;

@ a. 클래스 호출 : 자료형 변수명(객체명) = new 생성자();
    b. 메서드 호출 : 객체명.메서드명();

=========================================================

@ sysout 은 메모리에 저장되어 있지 않고, 데이터만 저장되어 출력됨
   returen 은 메모리에 저장되어 있지만, 출력되지 않음.

@ 유반환 호출할 땐 좌항에 반환형 변수명 적어야 함.
[자료형(반환형) 변수명 = 객체명.메서드명();]
예) int re2 = mt6.giveMeTheMoney();

@ 메서드 호출 했을 땐, 무조건 마우스 갖다대서 반환형인지 아닌지 확인해야 함.
     = 무반환은 sysout에 출력이 안되고, 유반환은 sysout 출력 가능.

@ 유반환 메서드 호출 : 
?? getTest12() 메서드를 생성 new Test12()값을 반환

--> [MethodTest3 class]
public Test12 getTest12() {
		
		return new Test12();
}

----> [MainEx class]
MethodTest3 mt11 = new MethodTest3();
		Test12 re4 = mt11.getTest12();
		
	}

@ 유반환 메서드 생성
public (자료형)반환명 메서드명() {}
  -> return new 반환값();
public MethodTest MethodTest2() {}
  -> return new MethodTest();

@ 메서드 호출
 클래스 객체생성 => 클래스명 변수명(객체명) = new [클래스명] 생성자();
   -> MethodTest2 mt1 = new MethodTest2();
 메서드 => 자료형(반환명) 변수명(객체명) = 변수명.메서드명();
   -> MethodTest re1 = mt1.getTest12();

@클래스 대문자 / 변수, 메서드 소문자로 시작 하며, 뒤 단어의 첫머리 글자를 대문자.
값을 반환할 땐 get이라는 메서드 이용
