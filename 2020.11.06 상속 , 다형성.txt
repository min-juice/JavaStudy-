
2020.11.06

# 메서드나 생성자에서 중복되는 데이터가 있을 때는 유지보수를 용이하게
하기 위해 어떻게 관리하나? 변수 선언

# 클래스에서 메서드나 생성자에 중복되는 코드가 있을 때는 유지보수를
용이하게 하기 위해 어떻게 관리하나? 메서드

1. 상속 : 부모클래스의 자원(변수/ 상수/ 메서드, 생성자는 불포함)을
   자식 클래스에서 임의로 사용할 수 있게 하는 기술
 -> 프로젝트에서 클래스끼리 공통으로 갖고 있는 자원에 대해
    유지 보수가 용이하게 관리 [상속을 적용하더라도 같은 개념(상위 개념)]

1-1. 객체지향에서의 상속은 상위 클래스의 특성들을 하위 클래스에서
      상속하여 재사용 하고 거기에 하위 클래스만의 필요한 특성들을
        추가, 변형해서 확장한다는 의미

2. 상속 표현은 어디에? 자식클래스에 표기

3. 상속 표기에 사용되는 키워드는? [extends 부모클래스명]

3-1. 생성자는 Generate Constructor using Fields 로 만들어야 함.

4. 부모 클래스로는 객체를 생성하지 않는다.

5. 자바의 최상위 부모클래스는 ? Object

6. 자바는 단일 상속을 원칙으로 해서, 부모 클래스는 하나.
   == 자바의 클래스는 단일상속만 한다.
  그러나, 예외적으로 interface는 다중상속을 지원한다.

7. 부모 클래스 : 자식 클래스
  *super 클래스 : sub 클래스*
   기본 클래스 : 유도 클래스

8. super( ) : 부모 클래스의 생성자 호출
< 생성자 super( ) >
- super ( )메서드는 슈퍼클래스의 생서자를 호출합니다.
a) 슈퍼클래스의 생성자 중 특정 생성자를 명시적으로 호출해야 하는 경우
 -> 슈퍼클래스에 기본 생성자 없이 파라미터 생성자만 정의할 경우
    서브 클래스에서 슈퍼클래스의 기본 생성자를 호출하지 못해 오류 발생.
    이때 super( )를 쓰면 슈퍼클래스의 생성자 호출 가능.
b) 슈퍼클래스의 생성자에서 초기화하는 코드가 존재할 경우 중복을 제거하기위해
 -> 생성자 super( )는 반드시 생성자 내에서 첫번째 문장으로 실행되어야 함
     생성자 내에서 super ( )와 this ( )를 동시에 사용 불가.

9. 부모클래스의 변수명과 자식클래스의 변수명이 같을 경우,
 -> 자식클래스의 변수가 우선적으로 인식
  부모클래스의 자원을 가리키고 싶을 때 super 키워드를 사용.

** 10. 다형성 **
 부모자료형 변수명 = new 자식생성자( );
    => 다형성으로 생성된 객체의 자료형은 무엇일까요?
	Car sonata2 = new Sonata( );

# 다형성으로 만들어진 객체의 자료형은 부모자료형으로 통일 된다.

11. 다형성을 이용해서 객체를 만들면 자식클래스가 갖고 있는
   고유 자원에 접근할 수 없다. 왜냐하면 자료형이 부모자료형이기 때문에
    이를 해결할 수 있는 방법은 =>
      instance of 라는 키워드와 getClass( )라는 메서드 중 하나를 사용

< instance of 연산자 >
- 어떤 객체에 대한 is - a (상속) 관계를 판별하는 연산자
- 주로 if문을 사용하여 형변환이 가능한지 여부를 판별
- instanceof의 결과가 true이면 형변환이 가능

1.메서드 오버라이딩
 - 상속 관계가 성립하는 클래스에서 부모클래스가 갖고 있는
    메서드의 내용을 자식클래스에서 재정의(수정/삭제/추가)하는 것
 - 다형성으로 생성된 객체의 경우, 자료형이 부모자료형이라도
    그 객체가 실행하는 메서드는 오버라이딩 된 메서드.
 - 다형성으로 객체만들었을 때 의미가 있음.

2. 오버로딩
- 오버로딩은 같은 클래스에서 이름이 같은 메서드가 파라미터 자료형에 따라
인정되는 문법.



1. 	Sonata s = null;
	
	if(sonata2 instanceof Sonata) {
		s = (Sonata)sonata2;
		s.only();

2.	Sonata ss = null;
	if(sonata2.getClass() == Car.class) {
		ss = (Sonata)sonata2;
		ss.only();


