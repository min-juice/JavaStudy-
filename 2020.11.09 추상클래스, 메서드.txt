
2020.11.09

next 메서드는 띄어쓰기를 허용하지 않음. 띄어쓰기 전 까지의 문자열 수용.

sc.nextLine( ); : 문자열을 입력받음, 띄어쓰기 조차도 다 인식됨.
enter로 어디까지 인식되어야 할 지 구분함.
next 메서드들을 사용했을때, nextline으로 끝내줘야함.


====================================================

추상화 :
- 추상클래스와 추상메서드를 의미함

추상메서드 : 
- 자식클래스에서 반드시 오버라이딩 해야하는 메서드
- abstract 키워드를 넣어주고, { } (중괄호) 대신 ; (세미콜론)을 넣는다.
- 메서드의 실행 부분이 없기때문에 외부에서 호출되면 안된다.

<기본 문법>
제한자 abstract 리턴타입 메서드명 ( );
public abstract void me1( );

추상화클래스 :
- 추상메서드를 갖고 있는 클래스는 반드시 추상클래스로 선언해야 함.
  => 단, 추상클래스는 반드시 추상메서드를 포함하는 것은 아니다.
- 추상메서드가 호출되면 안되기 때문에 인스턴스 생성이 불가능
- 추상클래스를 상속 받는 서브클래스는 반드시 추상메서드를 오버라이딩
  해야한다. => 하지 않을 경우 오류 발생.

<기본 문법>
abstract class 클래스명 ( ) ;

@ 추상클래스 사용/선언 이유
- 부모클래스로는 객체를 만들지 않음, 이를 시스템적으로 강제하기 위해 선언
- 부모클래스가 갖고 있는 추상메서드를 오버라이딩 하기 싫을 경우
   추상클래스로 선언하기도 함.

@ 추상클래스 선언 방법
- 클래스 헤더에 abstract 키워드를 넣어 줌.
-------------------------------------------------------------------------------------
//변수 : 값이 바뀌는 데이터
//상수 : 값이 안바뀌는 데이터 (대문자 처리, 띄어쓰기 말고, 언더바 처리)
           => System.out.println(Test.C_D_E);

final : 자식클래스에서 메서드 오버라이딩을 못하게 만듦.

1. 변수에 fina 키워드를 붙이면 ? 상수가 된다(상수: 값이 변하지 않는 수)

2. 메서드에 final 키워드가 붙으면? 자식클래스에서 절대로 오버라이딩하면
			   안되는 메서드가 된다.
3. 클래스 final 키워드를 붙이면? 자식클래스를 만들 수 없는 클래스

# // 한줄 주석 , /* 블럭주석 */

-------------------------------------------------------------------------------------

Object 클래스 : 자바 최상위 부모클래스

주요 3메서드
일반적으로 상황에 맞게 이 3개의 메서드를 오버라이딩을 해줌.
상황 : 객체 비교를 해야 하는 상황

1. toString( ) : sysout(msg.toString( ));
2. hashCode( ) : 객체가 어디에 저장이 되어 있는지 알려주는 메서드
3. equals( ) : 객체 동등비교 기능을 제공하는 메서드

접근제한자 (= 접근제어지시자)
- public : 프로젝트 어디에서든 접근 가능
- protected : 같은 패키지에서만 접근 가능.
                단, 상속관계가 성립할 때는 패키지가 달라도 접근할 수 있다.
- 디폴트 : 같은 패키지에서만 접근 가능
- private : 같은 클래스에서만 접근 가능

# 변수/상수에 사용 할 수 있는 접근제한자 : public, 디폴트, protected, private
# 메서드에 사용할 수 있는 접근제한자 : public, 디폴트, protected, private
# 클래스에 사용할 수 있는 접근제한자 : public, 디폴트
				