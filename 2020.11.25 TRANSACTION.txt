
2020.11.25

<Transaction>
데이터베이스 내에서 하나의 그룹으로 처리되어야 하는 명령문들을
모아 놓은 작업 단위

1. 그룹이 하나 이상의 SQL문장으로 구성되어 있다고 가정할 경우
- 4개의 SQL문장이 완전히 처리되거나 All Or Nothing 방식으로 처리 됨.

2. 트랜잭션 내의 모든 처리대상 명령문들이 반드시 완전히 수행되어야 함.
만약 모두가 완전히 수행되지 않고 어느 한 문장이라도 에러가 발생되었다면,
트랙잭션으로 묶인 전체 명령문은 모두 취소가 됨.

@ COMMIT
a. 모든 작업을 정상적으로 처리하겠다고 확정하는 명령어
b. 트랜잭션의 처리 과정을 데이터베이스에 반영하기 위해서,
	변경된 내용을 모두 영구 저장
c. COMMIT 수행하면, 하나의 트랜잭션 과정을 종료하게 된다.
d. TRANSACTION (INSERT, UPDATE, DELETE) 작업 내용을 실제 DB에 저장
e. 이전 데이터가 완전히 UPDATE 됨
f. 모든 사용자가 변경한 데이터의 결과를 볼 수 있음

@ ROLLBACK 
a. 작업 중 문제가 발생했을 때, 트랜잭션의 처리 과정에서 발생한 변경 사항을
 	취소하고, 트랜잭션 과정을 종료시킨다.
b. 트랜잭션으로 인한 하나의 묶음 처리가 시작되기 이전의 상태로 되돌린다.
c. TRANSACTION (INSERT, UPDATE, DELETE) 작업 내용을 취소
d. 이전 COMMIT한 곳까지만 복구

=> 트랜잭션 작업 중 하나라도 문제가 발생하면, 모든 작업을 취소해야 하므로
하나의 논리적인 작업 단위로 구성해놓아야 한다.
문제가 발생하면 논리적인 작업의 단위를 모두 취소해버리면 되기 때문이다.

@ 자동 COMMIT 명령과 자동 ROLLBACK 명령이 되는 경우
1. SQL * PLUS 가 정상 종료된 경우 -> 자동 COMMIT
2. SQL * PLUS 가 비정상 종료된 경우 -> 자동 ROLLBACK
3. DDL과 DCL 명령문이 수행된 경우 --> 자동 COMMIT
4. 정전이 발생했거나 컴퓨터 DOWN시 --> 자동 ROLLBACK



